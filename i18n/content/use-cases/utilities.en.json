
{
    "catalogue": [
        { "id": 77, "title": "Smart Meter Fault Reporting", "industry": "Utilities", "technology": "Power Automate", "miniDescription": "Automate the process of receiving fault signals from smart meters, diagnosing the issue with AI, and creating a work order.", "technicalLevel": 8, "problem": "A smart electricity meter detects an internal fault. It sends a diagnostic code to a central server, where it sits in a log file until an analyst reviews it the next morning. The customer is unaware of the issue until their power goes out.", "value": "With the rollout of smart meters, utility companies can now receive automated fault signals directly from the field. This solution automates the process of receiving these signals, diagnosing the issue, and creating a work order, turning raw data into an actionable response.", "roi": "The ROI is measured in proactive maintenance and improved reliability.\n\n<code>Formula:\nValue = (Cost of an Outage Avoided * Number of Avoided Outages) + (Manual Monitoring Hours Saved * Hourly Cost)</code>\n\nExample: Enables proactive maintenance, allowing the utility to fix problems before they cause a service disruption for the customer. Improves grid reliability and customer satisfaction. Reduces the need for manual monitoring of fault logs.", "implementationGuide": "<h5 class=\"font-bold text-lg mt-4 mb-2\">The Solution Blueprint: An Event-Driven Workflow</h5><p class=\"mb-4 text-gray-600\">This is an event-driven workflow triggered by an IoT device.</p><h5 class=\"font-bold text-lg mt-4 mb-2\">Step-by-Step Implementation Guide</h5><ol class=\"list-decimal list-inside space-y-3 text-gray-600\"><li><strong>IoT Integration:</strong> You need an Azure IoT Hub to receive the messages from the smart meters, and a Power Automate connector for IoT Hub.</li><li><strong>Build the Flow:</strong> Use the When a new message is received in an IoT Hub trigger. Use a Parse JSON action to extract the data from the message. Use a Switch control on the Fault Code property. Inside each case, add the appropriate action: Create a task, Update a row (for the CRM), or Create a work order (for the field service system).</li></ol><h5 class=\"font-bold text-lg mt-6 mb-2\">Beyond the Basics (Pro-Tip)</h5><p class=\"text-gray-600\">Predict failures before they happen. Instead of just reacting to fault codes, collect all the diagnostic data from the meters over time. Use this data to train an AI Builder Prediction model to identify patterns that precede a failure. The flow can then run on all meters daily, and if the model predicts a high probability of failure for a specific meter in the next 30 days, it can proactively schedule a replacement, creating a truly intelligent maintenance system.</p>" },
        { "id": 78, "title": "New Service Connection Request", "industry": "Utilities", "technology": "Power Automate", "miniDescription": "Digitize and automate the entire new service connection workflow, from application and credit check to account creation and dispatch.", "technicalLevel": 7, "problem": "A new homeowner calls the utility company to set up their electricity service. The agent takes their details over the phone, then fills out an internal form. This form goes to the credit department for a deposit check, and then to the dispatch team to schedule a technician to read the meter. The process takes several days.", "value": "When a customer moves into a new property, they need to get their electricity, gas, or water service connected. This process often involves manual paperwork and coordination between customer service, finance, and field operations. This solution digitizes and automates the entire new connection workflow.", "roi": "The ROI is measured in customer experience and efficiency.\n\n<code>Formula:\nValue = (Admin Hours Saved * Hourly Cost) + (Value of Improved Customer Experience)</code>\n\nExample: Provides a modern, digital, self-service experience for new customers. Reduces the administrative workload on customer service agents. Speeds up the new connection process from days to minutes. Ensures data accuracy by eliminating manual data entry.", "implementationGuide": "<h5 class=\"font-bold text-lg mt-4 mb-2\">The Solution Blueprint: A Portal-Driven Workflow</h5><p class=\"mb-4 text-gray-600\">This solution combines a customer-facing portal with a back-end workflow.</p><h5 class=\"font-bold text-lg mt-4 mb-2\">Step-by-Step Implementation Guide</h5><ol class=\"list-decimal list-inside space-y-3 text-gray-600\"><li><strong>Build the Portal:</strong> Create a user-friendly Power Pages site for new service applications.</li><li><strong>API Integration:</strong> You will need API access to a credit checking service, as well as your CRM and field service systems.</li><li><strong>Build the Flow:</strong> Trigger from the Power Pages form submission. Use an HTTP action to call the credit bureau API. Use a Condition to check the credit score and determine the deposit amount. Use Create a new row actions to create the customer account and the work order. Use Send an email (V2) to send the final confirmation to the customer.</li></ol><h5 class=\"font-bold text-lg mt-6 mb-2\">Beyond the Basics (Pro-Tip)</h5><p class=\"text-gray-600\">Offer a \"move-in\" package. As part of the workflow, partner with local telecom or insurance companies. The flow can use an AI Builder prompt to generate a personalized offer based on the customer's new address. The confirmation email could include this exclusive, one-click offer: \"As a new resident, get 20% off your first year of home internet from our partner, TelcoSwiss.\"</p>" }
    ]
}
